@namespace Eternet.Web.UI

@using Microsoft.FluentUI.AspNetCore.Components.DesignTokens
@inherits FluentComponentBase
@typeparam TItem

<FluentButton Id="@MenuButtonId" Appearance="@ButtonAppearance" aria-haspopup="true" aria-expanded="@_visible" @onclick="ToggleMenu" @onkeydown="OnKeyDown" Disabled="@(!Items.Where(i => !i.IsDivider).Any())">
    @if (string.IsNullOrWhiteSpace(Text))
    {
        <FluentIcon Value="@_icon" />
    }
    else
    {
        @Text
        <FluentIcon Value="@_icon" Slot="end" />
    }
</FluentButton>

<FluentMenu Anchor="@MenuButtonId" aria-labelledby="button" @bind-Open="@_visible" VerticalThreshold="200">
    @foreach (var item in Items)
    {
        @if (item.IsDivider)
        {
            <FluentDivider />
        }
        else if (item.IsSwitch)
        {
            <FluentSwitch Style="margin: 10px" @bind-value="item.Checked">
                @item.Text
            </FluentSwitch>
        }
        else
        {
            <FluentMenuItem OnClick="() => HandleItemClicked(item)" title="@item.Tooltip" Disabled="@item.IsDisabled">
                @item.Text
                @if (item.Icon != null)
                {
                    <span slot="start">
                        <FluentIcon Value="@item.Icon" Style="vertical-align: middle;" />
                    </span>
                }
            </FluentMenuItem>
        }
    }
</FluentMenu>